# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    env:
        GIT_BRANCH: "#develop"
        INPUT_SSH_PRIVATE_KEY: ${{secrets.SSH_PRIVATE_KEY}}
        INPUT_SSH_PUBLIC_KEY: ${{secrets.ADB_DEV_PUBLIC_KEY}}
        INPUT_REMOTE_DOCKER_HOST: ${{secrets.ADB_DEV_HOST}}
        INPUT_DEPLOY_PATH: "./path"
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo "Registering SSH keys..."
          mkdir -p "$HOME/.ssh"
          printf '%s\n' "$INPUT_SSH_PRIVATE_KEY" > "$HOME/.ssh/id_rsa"
          chmod 600 "$HOME/.ssh/id_rsa"
          eval $(ssh-agent)
          ssh-add "$HOME/.ssh/id_rsa"
          echo "Upload docker-compose file"
          echo "ssh -qit $HOME/.ssh/id_rsa -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no $INPUT_REMOTE_DOCKER_HOST mkdir -p $INPUT_DEPLOY_PATH"
          ssh -qit "$HOME/.ssh/id_rsa" -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no "$INPUT_REMOTE_DOCKER_HOST" "mkdir -p $INPUT_DEPLOY_PATH"
          echo "scp -i $HOME/.ssh/id_rsa -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no docker-compose.yml $INPUT_REMOTE_DOCKER_HOST:$INPUT_DEPLOY_PATH/docker-compose.yml"
          scp -i "$HOME/.ssh/id_rsa" -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no docker-compose.yml "$INPUT_REMOTE_DOCKER_HOST:$INPUT_DEPLOY_PATH/docker-compose.yml"
          echo "Build"
          ssh -qit "$HOME/.ssh/id_rsa" -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no "$INPUT_REMOTE_DOCKER_HOST" "docker-compose -f $INPUT_DEPLOY_PATH/docker-compose.yml up -d --build"
